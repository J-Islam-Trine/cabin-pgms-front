/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as BookRouteImport } from './routes/book'
import { Route as IndexRouteImport } from './routes/index'
import { Route as RoomsAddRouteImport } from './routes/rooms/add'

const BookRoute = BookRouteImport.update({
  id: '/book',
  path: '/book',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const RoomsAddRoute = RoomsAddRouteImport.update({
  id: '/rooms/add',
  path: '/rooms/add',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/book': typeof BookRoute
  '/rooms/add': typeof RoomsAddRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/book': typeof BookRoute
  '/rooms/add': typeof RoomsAddRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/book': typeof BookRoute
  '/rooms/add': typeof RoomsAddRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/book' | '/rooms/add'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/book' | '/rooms/add'
  id: '__root__' | '/' | '/book' | '/rooms/add'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BookRoute: typeof BookRoute
  RoomsAddRoute: typeof RoomsAddRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/book': {
      id: '/book'
      path: '/book'
      fullPath: '/book'
      preLoaderRoute: typeof BookRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/rooms/add': {
      id: '/rooms/add'
      path: '/rooms/add'
      fullPath: '/rooms/add'
      preLoaderRoute: typeof RoomsAddRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BookRoute: BookRoute,
  RoomsAddRoute: RoomsAddRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
